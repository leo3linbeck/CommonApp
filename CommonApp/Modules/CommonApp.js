/*	In order to make the helloWorld() function available client-side, you have to add a reference to the 'CommonApp' module in the GUI Designer.	The helloWorld() function can be executed from your JS file as follows:	alert(CommonApp.helloWorld());		For more information, refer to http://doc.wakanda.org/Wakanda0.Beta/help/Title/en/page1516.html*/var STATE_LIST = {	'AL': [1, 'Alabama'],	'AK': [2, 'Alaska'],	'AZ': [4, 'Arizona'],	'AR': [5, 'Arkansas'],	'CA': [6, 'California'],	'CO': [8, 'Colorado'],	'CT': [9, 'Connecticut'],	'DE': [10, 'Delaware'],	'FL': [12, 'Florida'],	'GA': [13, 'Georgia'],	'HI': [15, 'Hawaii'],	'ID': [16, 'Idaho'],	'IL': [17, 'Illinois'],	'IN': [18, 'Indiana'],	'IA': [19, 'Iowa'],	'KS': [20, 'Kansas'],	'KY': [21, 'Kentucky'],	'LA': [22, 'Louisiana'],	'ME': [23, 'Maine'],	'MD': [24, 'Maryland'],	'MA': [25, 'Massachusetts'],	'MI': [26, 'Michigan'],	'MN': [27, 'Minnesota'],	'MS': [28, 'Mississippi'],	'MO': [29, 'Missouri'],	'MT': [30, 'Montana'],	'NE': [31, 'Nebraska'],	'NV': [32, 'Nevada'],	'NH': [33, 'New Hampshire'],	'NJ': [34, 'New Jersey'],	'NM': [35, 'New Mexico'],	'NY': [36, 'New York'],	'NC': [37, 'North Carolina'],	'ND': [38, 'North Dakota'],	'OH': [39, 'Ohio'],	'OK': [40, 'Oklahoma'],	'OR': [41, 'Oregon'],	'PA': [42, 'Pennsylvania'],	'RI': [44, 'Rhode Island'],	'SC': [45, 'South Carolina'],	'SD': [46, 'South Dakota'],	'TN': [47, 'Tennessee'],	'TX': [48, 'Texas'],	'UT': [49, 'Utah'],	'VT': [50, 'Vermont'],	'VA': [51, 'Virginia'],	'WA': [53, 'Washington'],	'WV': [54, 'West Virginia'],	'WI': [55, 'Wisconsin'],	'WY': [56, 'Wyoming'],	'DC': [11, 'District of Columbia'],	'PR': [72, 'Puerto Rico']};	function parseUSPSAddress(v, city) {	var r = {};		if (v.substr(0,4) == 'none') {		r.firstLine = '';		r.secondLine = '';		r.success = false;	}	else {		r.success = true;		var a = v.split('\n');		a.length = 2;		r.firstLine = a[0].trim();		r.secondLine = a[1].trim();		r.ST = r.secondLine.substr(r.secondLine.length-'XX 00000-0000'.length, 2);		r.city = city ? city : r.secondLine.substr(0, r.secondLine.length-' XX 00000-0000'.length).trim();		r.zip9 = r.secondLine.substr(r.secondLine.length-'00000-0000'.length);		r.zip = r.zip9.substr(0,5);		r.state = STATE_LIST[ST];	}		return r;}exports.verifyAddress = function(param, debug) {	var xhr, getString, v;		if (debug) debugger;		try {		xhr = new XMLHttpRequest(); 		getString = 'http://jaguar.sego.me:7770/zip?address1=' + param.addr1 + '&address2=' + param.addr2 + '&city=' + param.city + '&zip=' + param.zip;		xhr.open('GET', getString, false); // to connect to a Web site synchronously		xhr.send(); // send the request	} catch (e) {		return ( { success: false, id: 'uspsNotFound', message: 'Address could not be verified.' } );	}		v = parseUSPSAddress(xhr.responseText, param.city);	return ( { success: true, zipVerified: v.success, USPS: [v.firstLine, v.secondLine], fullAddress: v } );};