include('Javascript/addresses.js');L3.familyConjureID = function familyConjureID(params) {	var f, v;	v = L3.addressesGetInfo(params);	if (v) {		f = ds.Family.find('mainUSPSDeliveryPoint === :1', v.delivery_point_barcode);				if (f === null) {			f = ds.Family.createEntity();			f.searchDistance = 2;			f.userID = currentUser().ID;			f.mainUSPSDeliveryPoint = v.delivery_point_barcode;		}		f.mainStreet1 = L3.addressesStreet1String(v);		f.mainStreet2 = L3.addressesStreet2String(v);		f.mainCity = v.components.city_name;		f.mainState = v.components.state_abbreviation;		f.mainZipCode = v.components.zipcode + '-' + v.components.plus4_code;		f.mainUSPSLine1 = v.delivery_line_1;		f.mainUSPSLine2 = v.last_line;		f.mainMapCoords = v.metadata.latitude + ',' + v.metadata.longitude;		f.save();				return f.ID;	}	else {		return null;	}}//L3.familyUpdateAddress = function familyUpdateAddress(f, v) {//	if (f) {//		if (v) {//			f.mainUSPSDeliveryPoint = v.delivery_point_barcode;//			f.mainStreet1 = L3.addressesStreet1String(v);//			f.mainStreet2 = L3.addressesStreet2String(v);//			f.mainCity = v.components.city_name;//			f.mainState = v.components.state_abbreviation;//			f.mainZipCode = v.components.zipcode + '-' + v.components.plus4_code;//			f.mainUSPSLine1 = v.delivery_line_1;//			f.mainUSPSLine2 = v.last_line;//			f.mainMapCoords = v.metadata.latitude + ',' + v.metadata.longitude;//		}//		else {//			f.mainUSPSDeliveryPoint = null;//			f.mainUSPSLine1 = null;//			f.mainUSPSLine2 = null;//			f.mainMapCoords = null;//		}//		f.save();//	}//}//L3.familyAddressLookup = function familyAddressLookup(a) {//	var f = null, param = a[0], v;//	if (param.debug) {//		debugger;//	}//	//	param.oneLineAddress = false;//	v = L3.addressesGetInfo(param);//	if (param.ID) {//		f = ds.Family(param.ID);//	}//	else {//		if (v) {//			f = ds.Family.find('mainUSPSDeliveryPoint === :1', v.delivery_point_barcode);//			if (f === null) {//				f = ds.Family.createEntity();//				if (f.userID === null) {//					f.userID = currentSession().user.ID;//				}//				f.searchDistance = 2;//			}//		}//	}//	//	L3.familyUpdateAddress(f, v);//		//	return ( { success: (v != null), result: f } );//}L3.familyNumberOfChildren = function familyNumberOfChildren() {	return this.children.length;}L3.familyGetPhoneType = function familyGetPhoneType(param) {	var a, attr, ref, v;		if (param.debug) {		debugger;	}			if (!param.phoneType) {		return null;	}		a = param.phoneType.split('_');	if (a.length !== 2) {		return null;	}		ref = a[0];	attr = a[1];		try {		v = ds.Person(this[ref].ID)[attr];	} catch(e) {		return null;	}		return v;}