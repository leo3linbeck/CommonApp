include('Javascript/addresses.js');L3.NEW_FAMILY_TEXT = 'SELECT TO ADD NEW FAMILY';L3.familyAddressLookup = function familyAddressLookup(param) {	var c, n = false, v, families;	if (param.debug) {		debugger;	}		families = ds.Family.query('mainStreet1 === :1 AND mainStreet2 === :2 AND mainCity === :3 AND mainZipCode == :4', param.street1, param.street2, param.city, param.zipCode + '*');	if (families.length > 0) {		return families;	}		v = L3.addressesGetInfo(param);			if (v) {		families = ds.Family.query('uspsDeliveryPoint = :1', v.delivery_point_barcode).orderBy('name');				c = families.find('name === :1',L3.NEW_FAMILY_TEXT);		if (c === null) {			c = ds.Family.createEntity();			c.name = L3.NEW_FAMILY_TEXT;			c.uspsDeliveryPoint = v.delivery_point_barcode;			n = true;		}		c.mainStreet1 = param.street1;		c.mainStreet2 = param.street2;		c.mainCity = param.city;		c.mainState = v.components.state_abbreviation;		c.mainZipCode = v.components.zipcode + '-' + v.components.plus4_code;		c.uspsLine1 = v.delivery_line_1;		c.uspsLine2 = v.last_line;		c.mapCoords = v.metadata.latitude + ',' + v.metadata.longitude;		c.save();				if (n) {			families.add(c, true);		}				return families;	}	else {		return null;	}}L3.familyGetNearbySchools = function familyGetNearbySchools(param) {	var a, f, h;	if (param.debug) {		debugger;	}			f = ds.Family(param.familyID);	h = f.mapCoords.split(',');	ds.School.all().forEach(		function (e, i) {			var c, d, v, s;			if (e.mapCoords) {				d = L3.getDistanceFromLatLonInMiles(h, e.mapCoords.split(','));				s = ds.SchoolOption.find('family.ID === :1 AND school.ID === :2', f.ID, e.ID);				if (!s) {					s = ds.SchoolOption.createEntity();					s.family = f;					s.school = e;				}				s.distance = d;				s.save();			}		}	);		if (param.selected) {		return ds.SchoolOption.query('family.ID == :1 AND distance <= :2 AND selected === true', f.ID, param.distance).orderBy('distance');	}	else {		return ds.SchoolOption.query('family.ID == :1 AND distance <= :2', f.ID, param.distance).orderBy('distance');	}}L3.familyNumberOfChildren = function familyNumberOfChildren() {	return this.children.length;}