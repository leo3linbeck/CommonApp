include('Javascript/addresses.js');L3.familyAddressLookup = function familyAddressLookup(param) {	var f, v;	if (param.debug) {		debugger;	}		f = this;		if (!f.uspsDeliveryPoint) {		param.oneLineAddress = false;		v = L3.addressesGetInfo(param);					if (v) {			f.uspsDeliveryPoint = v.delivery_point_barcode;			f.mainStreet1 = param.street1;			f.mainStreet2 = param.street2;			f.mainCity = param.city;			f.mainState = v.components.state_abbreviation;			f.mainZipCode = v.components.zipcode + '-' + v.components.plus4_code;			f.uspsLine1 = v.delivery_line_1;			f.uspsLine2 = v.last_line;			f.mapCoords = v.metadata.latitude + ',' + v.metadata.longitude;			f.save();		}		else {			return ( { success: false } );		}	}		return ( { success: true, result: f } );}L3.familyGetNearbySchools = function familyGetNearbySchools(param) {	var a, f, h, q;	if (param.debug) {		debugger;	}			f = ds.Family(param.familyID);	if (param.recalc) {		h = f.mapCoords.split(',');		ds.School.all().forEach(			function (e, i) {				var c, d, v, s;				if (e.mapCoords) {					d = L3.getDistanceFromLatLonInMiles(h, e.mapCoords.split(','));					if (d <= f.searchDistance) {						s = ds.SchoolOption.find('family.ID === :1 AND school.ID === :2', f.ID, e.ID);						if (!s) {							s = ds.SchoolOption.createEntity();							s.family = f;							s.school = e;						}						s.distance = d;						s.save();					}				}			}		);	}		q = 'family.ID == :1 AND distance <= :2 AND school.name == :3 AND school.category == :4';	a = (param.category === 'All' ? wildchar : param.category);	if (param.selected) {		return ds.SchoolOption.query(q + ' AND selected === true', f.ID, f.searchDistance, param.name, a).orderBy('distance');	}	else {		return ds.SchoolOption.query(q, f.ID, f.searchDistance, param.name, a).orderBy('distance');	}}L3.familyNumberOfChildren = function familyNumberOfChildren() {	return this.children.length;}