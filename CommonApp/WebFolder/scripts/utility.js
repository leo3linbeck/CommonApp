var L3 = L3 || {};L3.step = ['componentAddressEntry','componentChildEntry','componentFatherEntry','componentMotherEntry','componentGuardianEntry','componentSchoolMap'];L3.stack = [];L3.toTitleCase = function toTitleCase(s) {	return s.replace(/\b([a-z])/g, function (_, i) {  			return i.toUpperCase();  		}  	);}L3.convertToTitleCase = function convertToTitleCase(that) {	var i, r;	var o = that.source.getID();	var p = that.config['data-binding'];	var a = p.split('.');	r = window;	for (i = 0; i < a.length-1; i += 1) {		r = r[a[i]];	}	r[a[a.length-1]] = L3.toTitleCase(that.getValue());	source[o].autoDispatch();}L3.numberToWord = function numberToWord(num) {	switch (num) {		case 0:			return 'no';		case 1:			return 'one';		case 2:			return 'two';		case 3:			return 'three';		case 4:			return 'four';		case 5:			return 'five';		case 6:			return 'six';		case 7:			return 'seven';		case 8:			return 'eight';		case 9:			return 'nine';		case 10:			return 'ten';		default:			return String(num);	}}L3.loadGoogleMap = function loadGoogleMap(container, location, color) {	var a, c, m, o, s;		a = location.split(',');	c = new google.maps.LatLng(a[0], a[1]);	o = {			center: c, 			zoom: 12, 			mapTypeId: google.maps.MapTypeId.ROADMAP		};	L3.googleMap = L3.googleMap || new google.maps.Map(document.getElementById(container), o);	m = new google.maps.Marker({ map: L3.googleMap, position: c, icon: s, visible: true });	if (color) {		m.setIcon('http://maps.google.com/mapfiles/ms/icons/' + color + '-dot.png');	}}L3.addGoogleMapMarker = function addGoogleMapMarker(location, color) {	var a, c, m, s;		a = location.split(',');	c = new google.maps.LatLng(a[0], a[1]);	m = new google.maps.Marker({ map: L3.googleMap, position: c, visible: true });	if (color) {		m.setIcon('http://maps.google.com/mapfiles/ms/icons/' + color + '-dot.png');	}		return m;}