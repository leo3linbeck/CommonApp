var L3 = L3 || {};L3.localization = {	selectedLanguage: '',	//by default we define English as the default language	translations: {},	//stored on the server until we need them, then we load them		loadAndDoTranslation: function loadAndDoTranslation(language) {		Localization.getTranslationAsync(			{				onSuccess: function (result) {					var j = JSON.parse(result);					console.log('loadAndDoTranslation', j);					L3.localization.translations[language] = j;					L3.localization.doTranslation(language);				},  				onError: function (error) {					console.log('ERROR: loadAndDoTranslation', error);				},  				params: [language, false]			}		);	},		doTranslation: function doTranslation(language) {		var i, k, t, v;				$('[data-label]').each(			function() {				var translatedValue = L3.localization.translations[language].label[$(this).attr('data-label')],					//translated value of the text					label = '';				if (translatedValue) {					label = $('[for=' + $(this).attr('id') + ']');					//get the ID of the widget that has this label widget attached to it					label.text(translatedValue);					//swap the text of the label with the translated text				}			}		);		t = L3.localization.translations[language].richText;		k = Object.keys(t);		for (i = 0; i < k.length; i += 1) {			v = t[k[i]]				//translated value of the text			if (v) {				$('#'+k[i]).html(v);				//swap the text of the label with the translated text			}		}		t = L3.localization.translations[language].button;		k = Object.keys(t);		for (i = 0; i < k.length; i += 1) {			var v = t[k[i]]				//translated value of the text			if (v) {				$('#'+k[i]).text(v);				//swap the text of the label with the translated text			}		}		this.selectedLanguage = language;	},	//widgets have not yet been created by WAF	//use jQuery to modify the HTML	changeLanguage: function changeLanguage(language) {		var i, k, t, v;				if (language !== this.selectedLanguage) {			if (this.translations[language] === undefined) {				this.loadAndDoTranslation(language);			}			else {				this.doTranslation(language);			}		}	},		schoolInfoWindow: function schoolInfoWindow(d){		if (L3.localization.selectedLanguage === 'es') {			return('<div class="googleMapInfoWindow">' +				'<div class="gmiwSchoolName"><a href="http://familiesempowered.org" target="_blank">' + d.schoolName + '</a>' + '</div>' +				'<div class="gmiwStartGrade">Primer Grado: ' + L3.gradeMap[d.schoolStart] + '</div>' +				'<div class="gmiwEndGrade">Fin de Grado: ' + L3.gradeMap[d.schoolEnd] +  '</div>' +				'<div class="gmiwEnrollment">Estudiantes: ' + d.schoolEnroll + '</div>' +				'<div class="gmiwRating">Calidad: ' + d.schoolRating + ' (out of 100)' + '</div>' +				'<div class="gmiwAttendance">Attendance: ' + d.schoolAttend + '</div>' +				'<div class="gmiwGradRate">Graduación: ' + d.schoolGraduate + '</div>' +			'</div>');		}		else {			return ('<div class="googleMapInfoWindow">' + 				'<div class="gmiwSchoolName"><a href="http://familiesempowered.org" target="_blank">' + d.schoolName + '</a>' + '</div>' +				'<div class="gmiwStartGrade">Starting Grade: ' + L3.gradeMap[d.schoolStart] + '</div>' +				'<div class="gmiwEndGrade">Ending Grade: ' + L3.gradeMap[d.schoolEnd] +  '</div>' +				'<div class="gmiwEnrollment">Enrollment: ' + d.schoolEnroll + '</div>' +				'<div class="gmiwRating">Rating: ' + d.schoolRating + ' (out of 100)' + '</div>' +				'<div class="gmiwAttendance">Attendance: ' + d.schoolAttend + '</div>' +				'<div class="gmiwGradRate">Graduation: ' + d.schoolGraduate + '</div>' +			 '</div>');		}	}}